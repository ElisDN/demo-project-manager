security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fetcher:
            id: App\Security\UserProvider
    encoders:
        App\Security\UserIdentity: native
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            anonymous: true
            stateless: true
            user_checker: App\Security\UserChecker
            http_basic:
                provider: fetcher
        main:
            anonymous: true
            user_checker: App\Security\UserChecker
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
                    - App\Security\OAuth\FacebookAuthenticator
                entry_point: App\Security\LoginFormAuthenticator
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            form_login: true
            logout:
                path:   app_logout

    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_MANAGE_USERS
            - ROLE_WORK_MANAGE_MEMBERS
            - ROLE_WORK_MANAGE_PROJECTS

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/oauth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/reset, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }

